CREATE TABLE user (
  `id` VARCHAR(20) NOT NULL PRIMARY KEY,
  `name` VARCHAR(50) NOT NULL,
  `username` VARCHAR(50) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `dob` VARCHAR(10) NULL,
  `gender` VARCHAR(10) NULL,
  `role` VARCHAR(10) NOT NULL,
  `email` VARCHAR(50) NULL,
  `phone` VARCHAR(20) NULL,
  `address` varchar(100) NULL,
  `lock` TINYINT NULL DEFAULT 0,
  `state` TINYINT NULL DEFAULT 1,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

INSERT INTO user (`id`, `name`, `username`, `password`, `role`) VALUES ('1', 'Admin', 'admin', '1', 'ADMIN');

ALTER TABLE `heroku_37ddbd1e526d42a`.`user` 
CHANGE COLUMN `lock` `active` TINYINT(4) NULL DEFAULT '1' ,
CHANGE COLUMN `state` `visible` TINYINT(4) NULL DEFAULT '1' ;

CREATE TABLE course (
  `id` VARCHAR(20) NOT NULL PRIMARY KEY,
  `name` VARCHAR(250) NOT NULL,
  `description` VARCHAR(250) NULL,
  `thumbnail` TEXT NULL,
  `lock` TINYINT NULL DEFAULT 0,
  `state` TINYINT NULL DEFAULT 1,
  `created_by` VARCHAR(20) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_UserCourse FOREIGN KEY (created_by) REFERENCES user(id)
);

CREATE TABLE lesson (
  `id` VARCHAR(20) NOT NULL PRIMARY KEY,
  `name` VARCHAR(250) NOT NULL,
  `description` VARCHAR(250) NULL,
  `video` TEXT NULL,
  `lock` TINYINT NULL DEFAULT 0,
  `state` TINYINT NULL DEFAULT 1,
  `course_id` VARCHAR(20) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_CourseLesson FOREIGN KEY (course_id) REFERENCES course(id)
);

CREATE TABLE test (
  `id` VARCHAR(20) NOT NULL PRIMARY KEY,
  `name` VARCHAR(250) NOT NULL,
  `description` VARCHAR(250) NULL,
  `thumbnail` TEXT NULL,
  `mode` VARCHAR(10) NOT NULL,
  `time_limit` INT NOT NULL,
  `lock` TINYINT NULL DEFAULT 0,
  `state` TINYINT NULL DEFAULT 1,
  `created_by` VARCHAR(20) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_UserTest FOREIGN KEY (created_by) REFERENCES user(id)
);

CREATE TABLE question (
  `id` VARCHAR(20) NOT NULL PRIMARY KEY,
  `name` TEXT NOT NULL,
  `answer` TEXT NOT NULL,
  `correct_answer` TEXT NOT NULL,
  `lock` TINYINT NULL DEFAULT 0,
  `state` TINYINT NULL DEFAULT 1,
  `test_id` VARCHAR(20) NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_TestQuestion FOREIGN KEY (test_id) REFERENCES test(id)
);

CREATE TABLE test_history (
  `id` VARCHAR(20) NOT NULL PRIMARY KEY,
  `test_id` VARCHAR(20) NOT NULL,
  `user_id` VARCHAR(20) NOT NULL,
  `score` FLOAT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT FK_TestHistory_Test FOREIGN KEY (test_id) REFERENCES test(id),
  CONSTRAINT FK_TestHistory_User FOREIGN KEY (user_id) REFERENCES user(id)
);

CREATE TABLE book (
  `id` VARCHAR(20) NOT NULL PRIMARY KEY,
  `name` VARCHAR(100) NOT NULL,
  `description` TEXT NULL,
  `gallery` TEXT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE audio (
  `id` VARCHAR(20) NOT NULL PRIMARY KEY,
  `name` VARCHAR(100) NOT NULL,
  `description` TEXT NULL,
  `thumbnail` TEXT NOT NULL,
  `link` TEXT NOT NULL,
  `created_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);